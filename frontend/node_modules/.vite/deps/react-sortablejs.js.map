{
  "version": 3,
  "sources": ["../../sortablejs/modular/sortable.esm.js", "../../classnames/index.js", "../../tiny-invariant/dist/tiny-invariant.esm.js", "../../react-sortablejs/dist/src/index.ts", "../../react-sortablejs/dist/src/react-sortable.tsx", "../../react-sortablejs/dist/src/util.ts", "../../react-sortablejs/dist/src/types.ts"],
  "sourcesContent": ["/**!\n * Sortable 1.15.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.15.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\r\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n * @param  {Number} x      X position\r\n * @param  {Number} y      Y position\r\n * @return {HTMLElement}   Element of the first found nearest Sortable\r\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists && !ChromeForAndroid) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.removeAttribute(\"id\");\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n\n          if (elLastChild && elLastChild.nextSibling) {\n            // the last draggable element is not the last node\n            el.insertBefore(dragEl, elLastChild.nextSibling);\n          } else {\n            el.appendChild(dragEl);\n          }\n\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\r\n   * Save the current sorting\r\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\r\n   * Destroy\r\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (!sortable.options.avoidImplicitDeselect) {\n      if (sortable.options.supportPointer) {\n        on(document, 'pointerup', this._deselectMultiDrag);\n      } else {\n        on(document, 'mouseup', this._deselectMultiDrag);\n        on(document, 'touchend', this._deselectMultiDrag);\n      }\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      avoidImplicitDeselect: false,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvent: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvent: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvent: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n", "/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n", "export {\n  default as Sortable,\n  Direction,\n  DOMRect,\n  GroupOptions,\n  MoveEvent,\n  Options,\n  PullResult,\n  PutResult,\n  SortableEvent,\n  SortableOptions,\n  Utils,\n} from \"sortablejs\";\nexport { ReactSortable } from \"./react-sortable\";\nexport * from \"./types\";\n", "import classNames from \"classnames\";\nimport {\n  Children,\n  cloneElement,\n  Component,\n  createElement,\n  createRef,\n  ReactElement,\n  RefObject,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport invariant from \"tiny-invariant\";\nimport {\n  AllMethodsExceptMove,\n  HandledMethodNames,\n  ItemInterface,\n  ReactSortableProps,\n  Store,\n  UnHandledMethodNames,\n} from \"./types\";\nimport {\n  createCustoms,\n  destructurePropsForOptions,\n  getMode,\n  handleStateAdd,\n  handleStateChanges,\n  handleStateRemove,\n  insertNodes,\n  removeNode,\n  removeNodes,\n} from \"./util\";\n\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\nconst store: Store = { dragging: null };\n\nexport class ReactSortable<T extends ItemInterface> extends Component<\n  ReactSortableProps<T>\n> {\n  /* eslint-disable-next-line */\n  static defaultProps: Partial<ReactSortableProps<any>> = {\n    clone: (item) => item,\n  };\n\n  private ref: RefObject<HTMLElement>;\n  constructor(props: ReactSortableProps<T>) {\n    super(props);\n    // @todo forward ref this component\n    this.ref = createRef<HTMLElement>();\n\n    // make all state false because we can't change sortable unless a mouse gesture is made.\n    const newList = [...props.list].map((item) =>\n      Object.assign(item, {\n        chosen: false,\n        selected: false,\n      })\n    );\n\n    props.setList(newList, this.sortable, store);\n    invariant(\n      //@ts-expect-error: Doesn't exist. Will deprecate soon.\n      !props.plugins,\n      `\nPlugins prop is no longer supported.\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\n      `\n    );\n  }\n\n  componentDidMount(): void {\n    if (this.ref.current === null) return;\n    const newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  }\n\n  componentDidUpdate(prevProps: ReactSortableProps<T>): void {\n    if (prevProps.disabled !== this.props.disabled && this.sortable) {\n      this.sortable.option(\"disabled\", this.props.disabled);\n    }\n  }\n\n  render(): JSX.Element {\n    const { tag, style, className, id } = this.props;\n    const classicProps = { style, className, id };\n\n    // if no tag, default to a `div` element.\n    const newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(\n      newTag,\n      {\n        // @todo - find a way (perhaps with the callback) to allow AntD components to work\n        ref: this.ref,\n        ...classicProps,\n      },\n      this.getChildren()\n    );\n  }\n\n  private getChildren() {\n    const {\n      children,\n      dataIdAttr,\n      selectedClass = \"sortable-selected\",\n      chosenClass = \"sortable-chosen\",\n      /* eslint-disable */\n      dragClass = \"sortable-drag\",\n      fallbackClass = \"sortable-falback\",\n      ghostClass = \"sortable-ghost\",\n      swapClass = \"sortable-swap-highlight\",\n      /* eslint-enable */\n      filter = \"sortable-filter\",\n      list,\n    } = this.props;\n\n    // if no children, don't do anything.\n    if (!children || children == null) return null;\n    const dataid = dataIdAttr || \"data-id\";\n    /* eslint-disable-next-line */\n    return Children.map(children as ReactElement<any>[], (child, index) => {\n      if (child === undefined) return undefined;\n\n      const item = list[index] || {};\n      const { className: prevClassName } = child.props;\n\n      // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n      const filtered = typeof filter === \"string\" && {\n        [filter.replace(\".\", \"\")]: !!item.filtered,\n      };\n\n      const className = classNames(prevClassName, {\n        [selectedClass]: item.selected,\n        [chosenClass]: item.chosen,\n        ...filtered,\n        // [dragClass]: true,\n        // [fallbackClass]: true,\n        // [ghostClass]: true,\n        // [swapClass]: true\n      });\n\n      return cloneElement(child, {\n        [dataid]: child.key,\n        className,\n      });\n    });\n  }\n\n  /** Appends the `sortable` property to this component */\n  private get sortable(): Sortable | null {\n    const el = this.ref.current;\n    if (el === null) return null;\n    const key = Object.keys(el).find((k) => k.includes(\"Sortable\"));\n    if (!key) return null;\n    //@ts-expect-error: fix me.\n    return el[key] as Sortable;\n  }\n\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n  makeOptions(): Options {\n    const DOMHandlers: HandledMethodNames[] = [\n      \"onAdd\",\n      \"onChoose\",\n      \"onDeselect\",\n      \"onEnd\",\n      \"onRemove\",\n      \"onSelect\",\n      \"onSpill\",\n      \"onStart\",\n      \"onUnchoose\",\n      \"onUpdate\",\n    ];\n    const NonDOMHandlers: UnHandledMethodNames[] = [\n      \"onChange\",\n      \"onClone\",\n      \"onFilter\",\n      \"onSort\",\n    ];\n    const newOptions: Options = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerPropAndDOM(name))\n    );\n    NonDOMHandlers.forEach(\n      (name) => (newOptions[name] = this.prepareOnHandlerProp(name))\n    );\n\n    /** onMove has 2 arguments and needs to be handled seperately. */\n    const onMove = (evt: MoveEvent, originalEvt: Event) => {\n      const { onMove } = this.props;\n      const defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      const result = onMove(evt, originalEvt, this.sortable, store);\n      if (typeof result === \"undefined\") return false;\n      return result;\n    };\n\n    return {\n      ...newOptions,\n      onMove,\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n  prepareOnHandlerPropAndDOM(\n    evtName: HandledMethodNames\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n      // calls state change\n      //@ts-expect-error: until @types multidrag item is in\n      this[evtName](evt);\n    };\n  }\n\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n  prepareOnHandlerProp(\n    evtName: Exclude<AllMethodsExceptMove, HandledMethodNames>\n  ): (evt: SortableEvent) => void {\n    return (evt) => {\n      // call the component prop\n      this.callOnHandlerProp(evt, evtName);\n    };\n  }\n\n  /** Calls the `props.on[Handler]` function */\n  callOnHandlerProp(evt: SortableEvent, evtName: AllMethodsExceptMove): void {\n    const propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }\n\n  // SORTABLE DOM HANDLING\n\n  onAdd(evt: MultiDragEvent): void {\n    const { list, setList, clone } = this.props;\n    /* eslint-disable-next-line */\n    const otherList = [...store.dragging!.props.list];\n    const customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n\n    const newList = handleStateAdd(customs, list, evt, clone).map((item) =>\n      Object.assign(item, {\n        selected: false,\n      })\n    );\n\n    setList(newList, this.sortable, store);\n  }\n\n  onRemove(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const mode = getMode(evt);\n    const customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    let newList = [...list];\n    // remove state if not in clone mode. otherwise, keep.\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList);\n    // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n      // switch used to get the clone\n      let customClones = customs;\n      switch (mode) {\n        case \"multidrag\":\n          customClones = customs.map((item, index) => ({\n            ...item,\n            element: evt.clones[index],\n          }));\n          break;\n        case \"normal\":\n          customClones = customs.map((item) => ({\n            ...item,\n            element: evt.clone,\n          }));\n          break;\n        case \"swap\":\n        default: {\n          invariant(\n            true,\n            `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`\n          );\n        }\n      }\n      removeNodes(customClones);\n\n      // replace selected items with cloned items\n      customs.forEach((curr) => {\n        const index = curr.oldIndex;\n        /* eslint-disable-next-line */\n        const newItem = this.props.clone!(curr.item, evt);\n        newList.splice(index, 1, newItem);\n      });\n    }\n\n    // remove item.selected from list\n    newList = newList.map((item: T) =>\n      Object.assign(item, {\n        selected: false,\n      })\n    );\n\n    setList(newList, this.sortable, store);\n  }\n\n  onUpdate(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    const newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  }\n\n  onStart(): void {\n    store.dragging = this;\n  }\n\n  onEnd(): void {\n    store.dragging = null;\n  }\n\n  onChoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      let newItem = item;\n      if (index === evt.oldIndex) {\n        newItem = Object.assign(item, {\n          chosen: true,\n        });\n      }\n      return newItem;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onUnchoose(evt: SortableEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item, index) => {\n      let newItem = item;\n      if (index === evt.oldIndex) {\n        newItem = Object.assign(newItem, {\n          chosen: false,\n        });\n      }\n      return newItem;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onSpill(evt: SortableEvent): void {\n    const { removeOnSpill, revertOnSpill } = this.props;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  }\n\n  onSelect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) =>\n      Object.assign(item, {\n        selected: false,\n      })\n    );\n\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) {\n        console.log(\n          `\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`\n        );\n        console.log(evt);\n        return;\n      }\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n\n  onDeselect(evt: MultiDragEvent): void {\n    const { list, setList } = this.props;\n    const newList = list.map((item) =>\n      Object.assign(item, {\n        selected: false,\n      })\n    );\n    evt.newIndicies.forEach((curr) => {\n      const index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  }\n}\n\n// everything below this point can be removed\n// once @types has been merged. PR submited\ninterface MultiIndices {\n  multiDragElement: HTMLElement;\n  index: number;\n}\n\nexport interface MultiDragEvent extends SortableEvent {\n  // @todo - add this to @types\n  clones: HTMLElement[];\n  oldIndicies: MultiIndices[];\n  newIndicies: MultiIndices[];\n  swapItem: HTMLElement | null;\n}\n", "import { PropsWithChildren } from \"react\";\nimport Sortable, { Options } from \"sortablejs\";\nimport { MultiDragEvent } from \"./react-sortable\";\nimport { AllMethodNames, ItemInterface, ReactSortableProps } from \"./types\";\n\n/**\n * Removes the `node` from the DOM\n * @param node\n */\nexport function removeNode(node: HTMLElement): void {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n\n/**\n * Inserts the `newChild` node at the given index in a parent\n * @param parent The parent HTML Element.\n * @param newChild A HTML eement to add as a child of the parent.\n * @param index index of the parent to place the new child in.\n */\nexport function insertNodeAt(\n  parent: HTMLElement,\n  newChild: HTMLElement,\n  index: number\n): void {\n  const refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\n// @todo - create a dom handler function for arrays or not at all\n\n/** removes stuff from the dom in a nice order */\n// @todo - do I need parenElement?\nexport function handleDOMChanges<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  removeNodes(customs);\n  insertNodes(customs);\n}\n\nexport function removeNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => removeNode(curr.element));\n}\n\nexport function insertNodes<T extends ItemInterface>(\n  customs: Normalized<T>[]\n): void {\n  customs.forEach((curr) => {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nexport function createCustoms<T extends ItemInterface>(\n  evt: MultiDragEvent,\n  list: T[]\n): Normalized<T>[] {\n  const mode = getMode(evt);\n  const parentElement = { parentElement: evt.from };\n  let custom = [];\n  switch (mode) {\n    case \"normal\":\n      /* eslint-disable */\n      const item = {\n        element: evt.item,\n        newIndex: evt.newIndex!,\n        oldIndex: evt.oldIndex!,\n        parentElement: evt.from,\n      };\n      custom = [item];\n      break;\n    case \"swap\":\n      const drag: Input = {\n        element: evt.item,\n        oldIndex: evt.oldIndex!,\n        newIndex: evt.newIndex!,\n        ...parentElement,\n      };\n      const swap: Input = {\n        element: evt.swapItem!,\n        oldIndex: evt.newIndex!,\n        newIndex: evt.oldIndex!,\n        ...parentElement,\n      };\n      custom = [drag, swap];\n      break;\n    case \"multidrag\":\n      custom = evt.oldIndicies.map<Input>((curr, index) => ({\n        element: curr.multiDragElement,\n        oldIndex: curr.index,\n        newIndex: evt.newIndicies[index].index,\n        ...parentElement,\n      }));\n      break;\n  }\n  /* eslint-enable */\n\n  const customs = createNormalized(custom, list);\n  return customs;\n}\n\n/** moves items form old index to new index without breaking anything ideally. */\nexport function handleStateChanges<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const a = handleStateRemove(normalized, list);\n  const b = handleStateAdd(normalized, a);\n  return b;\n}\n\nexport function handleStateRemove<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[]\n): T[] {\n  const newList = [...list];\n  normalized\n    .concat()\n    .reverse()\n    .forEach((curr) => newList.splice(curr.oldIndex, 1));\n  return newList;\n}\n\nexport function handleStateAdd<T extends ItemInterface>(\n  normalized: Normalized<T>[],\n  list: T[],\n  evt?: Sortable.SortableEvent,\n  clone?: ((currentItem: T, evt: Sortable.SortableEvent) => T) | undefined\n): T[] {\n  const newList = [...list];\n  normalized.forEach((curr) => {\n    const newItem = clone && evt && clone(curr.item, evt);\n    newList.splice(curr.newIndex, 0, newItem || curr.item);\n  });\n  return newList;\n}\n\nexport function getMode(evt: MultiDragEvent): \"multidrag\" | \"swap\" | \"normal\" {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nexport function createNormalized<T extends ItemInterface>(\n  inputs: Input[],\n  list: T[]\n): Normalized<T>[] {\n  const normalized = inputs\n    .map<Normalized<T>>((curr) => ({ ...curr, item: list[curr.oldIndex] }))\n    .sort((a, b) => a.oldIndex - b.oldIndex);\n  return normalized;\n}\n\nexport interface Input {\n  parentElement: HTMLElement;\n  element: HTMLElement;\n  oldIndex: number;\n  newIndex: number;\n}\n\nexport interface Normalized<T> extends Input {\n  item: T;\n}\n\n/**\n * Removes the following group of properties from `props`,\n * leaving only `Sortable.Options` without any `on` methods.\n * @param props `ReactSortable.Props`\n */\nexport function destructurePropsForOptions<T>(\n  props: PropsWithChildren<ReactSortableProps<T>>\n): Exclude<Options, AllMethodNames> {\n  /* eslint-disable */\n  const {\n    // react sortable props\n    list,\n    setList,\n    children,\n    tag,\n    style,\n    className,\n    clone,\n    // sortable options that have methods we want to overwrite\n    onAdd,\n    onChange,\n    onChoose,\n    onClone,\n    onEnd,\n    onFilter,\n    onRemove,\n    onSort,\n    onStart,\n    onUnchoose,\n    onUpdate,\n    onMove,\n    onSpill,\n    onSelect,\n    onDeselect,\n    ...options\n  } = props;\n  /* eslint-enable */\n  return options;\n}\n\n/**\n * Construct a type with the properties of T except for those in type K.\n * Including this allows for backwards compatibility with earlier versions of TS.\n */\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n", "import {\n  CSSProperties,\n  ForwardRefExoticComponent,\n  ReactHTML,\n  ReactNode,\n  RefAttributes,\n} from \"react\";\nimport Sortable, { MoveEvent, Options, SortableEvent } from \"sortablejs\";\nimport { ReactSortable } from \"./react-sortable\";\nimport { Omit } from \"./util\";\n\n// @todo: remove dynamic types and create declarative types instead for readability of user.\n// add these in docs as well\nexport interface ItemInterface {\n  /** The unique id associated with your item. It's recommended this is the same as the key prop for your list item. */\n  id: string | number;\n  /** When true, the item is selected using MultiDrag */\n  selected?: boolean;\n  /** When true, the item is deemed \"chosen\", which basically just a mousedown event. */\n  chosen?: boolean;\n  /** When true, it will not be possible to pick this item up in the list. */\n  filtered?: boolean;\n  /* eslint-disable-next-line */\n  [property: string]: any;\n}\n\nexport interface ReactSortableProps<T>\n  extends ReactSortableOptions,\n    Omit<Options, AllMethodNames> {\n  /**\n   * The list of items to use.\n   */\n  list: T[];\n  /**\n   * Sets the state for your list of items.\n   */\n  setList: (newState: T[], sortable: Sortable | null, store: Store) => void;\n  /**\n   * If parsing in a component WITHOUT a ref, an error will be thrown.\n   *\n   * To fix this, use the `forwardRef` component.\n   *\n   * @example\n   * forwardRef<HTMLElement, YOURPROPS>((props, ref) => <button {...props} ref={ref} />)\n   */\n  /* eslint-disable-next-line */\n  tag?: ForwardRefExoticComponent<RefAttributes<any>> | keyof ReactHTML;\n  /**\n   * If this is provided, the function will replace the clone in place.\n   *\n   * When an is moved from `A` to `B` with `pull: 'clone'`,\n   * the original element will be moved to `B`\n   * and the new clone will be placed in `A`\n   */\n  clone?: (currentItem: T, evt: SortableEvent) => T;\n\n  // other classic DOM attributes.\n  style?: CSSProperties;\n  className?: string;\n  id?: string;\n  children?: ReactNode;\n}\n\n/**\n * Holds the react component as a reference so we can access it's store.\n *\n * Mainly used to access `props.list` within another components.\n */\nexport interface Store {\n  /* eslint-disable-next-line */\n  dragging: null | ReactSortable<any>;\n}\n\n//\n// TYPES FOR METHODS\n//\n\n/**\n * Change the `on[...]` methods in Sortable.Options,\n * so that they all have an extra arg that is `store: Store`\n */\nexport type ReactSortableOptions = Partial<\n  Record<\n    AllMethodsExceptMove,\n    (evt: SortableEvent, sortable: Sortable | null, store: Store) => void\n  >\n> & {\n  /**\n   * The default sortable behaviour has been changed.\n   *\n   * If the return value is void, then the defaults will kick in.\n   * it saves the user trying to figure it out.\n   * and they can just use onmove as a callback value\n   */\n  onMove?: (\n    evt: MoveEvent,\n    originalEvent: Event,\n    sortable: Sortable | null,\n    store: Store\n  ) => boolean | -1 | 1 | void;\n};\n\n// STRINGS\n\n/** All method names starting with `on` in `Sortable.Options` */\nexport type AllMethodNames =\n  | \"onAdd\"\n  | \"onChange\"\n  | \"onChoose\"\n  | \"onClone\"\n  | \"onEnd\"\n  | \"onFilter\"\n  | \"onMove\"\n  | \"onRemove\"\n  | \"onSort\"\n  | \"onSpill\"\n  | \"onStart\"\n  | \"onUnchoose\"\n  | \"onUpdate\"\n  | \"onSelect\"\n  | \"onDeselect\";\n\n/** Method names that fire in `this`, when this is react-sortable */\nexport type HandledMethodNames =\n  | \"onAdd\"\n  | \"onRemove\"\n  | \"onUpdate\"\n  | \"onStart\"\n  | \"onEnd\"\n  | \"onSpill\"\n  | \"onSelect\"\n  | \"onDeselect\"\n  | \"onChoose\"\n  | \"onUnchoose\";\n\nexport type UnHandledMethodNames = Exclude<\n  AllMethodsExceptMove,\n  HandledMethodNames | \"onMove\"\n>;\n\n/**\n * Same as `SortableMethodKeys` type but with out the string `onMove`.\n */\nexport type AllMethodsExceptMove = Exclude<AllMethodNames, \"onMove\">;\n"],
  "mappings": "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",
  "names": ["obj", "index", "rootEl", "cloneEl", "oldIndex", "newIndex", "oldDraggableIndex", "newDraggableIndex", "putSortable", "option", "defaults", "dragEl", "dragStarted", "drop", "autoScroll", "dragStart", "clone", "parentEl", "pluginEvent", "_detectDirection", "_dragElInRowColumn", "_detectNearestEmptySortable", "_prepareGroup", "_hideGhostForTarget", "_unhideGhostForTarget", "nearestEmptyInsertDetectEvent", "_checkOutsideTargetEl", "dragStartFn", "target", "after", "el", "plugins", "onSpill", "index", "clone", "onSpill"]
}
