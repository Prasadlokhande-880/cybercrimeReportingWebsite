{
  "version": 3,
  "sources": ["../../sweetalert2-react-content/src/mounts.js", "../../sweetalert2-react-content/src/index.js"],
  "sourcesContent": ["export const mounts = [\n  {\n    key: 'title',\n    getter: (swal) => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: (swal) => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: (swal) => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: (swal) => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: (swal) => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: (swal) => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: (swal) => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: (swal) => swal.getIconContent(),\n  },\n  {\n    key: 'loaderHtml',\n    getter: (swal) => swal.getLoader(),\n  },\n]\n", "import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent(ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams(params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map((mount) => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n\n  function render(swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find((mount) => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      const root = createRoot(domElement)\n      root.render(value)\n      swal.__roots.push(root)\n    })\n  }\n\n  function unrender(swal) {\n    swal.__roots.forEach((root) => {\n      root.unmount()\n    })\n    swal.__roots = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main(params, mixinParams) {\n      this.__roots = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superWillOpen = otherParams.willOpen || noop\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          willOpen: (popup) => {\n            render(this, reactParams)\n            superWillOpen(popup)\n          },\n          didOpen: (popup) => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup)\n            })\n          },\n          didDestroy: (popup) => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        })\n      )\n    }\n\n    update(params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["mounts", "key", "getter", "swal", "getTitle", "getHtmlContainer", "getConfirmButton", "getDenyButton", "getCancelButton", "getFooter", "getCloseButton", "getIconContent", "getLoader", "noop", "withReactContent", "ParentSwal", "extractReactParams", "params", "reactParams", "otherParams", "mountKeys", "map", "mount", "Object", "entries", "forEach", "value", "includes", "React", "isValidElement", "render", "find", "domElement", "root", "createRoot", "__roots", "push", "unrender", "unmount", "argsToParams", "args", "name", "index", "undefined", "_main", "mixinParams", "__params", "assign", "superWillOpen", "willOpen", "superDidOpen", "didOpen", "superDidDestroy", "didDestroy", "popup", "setTimeout", "update"]
}
