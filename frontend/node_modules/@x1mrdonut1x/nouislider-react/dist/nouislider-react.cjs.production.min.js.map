{"version":3,"file":"nouislider-react.cjs.production.min.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["const sortObjectKeys = obj =>\r\n  Object.entries(obj)\r\n    .sort()\r\n    .reduce((o, [k, v]) => ((o[k] = v), o), {});\r\n\r\nexport const isEqual = (val1, val2) => {\r\n  if (typeof val1 === \"number\" && typeof val2 === \"number\")\r\n    return val1 === val2;\r\n  if (typeof val1 === \"string\" && typeof val2 === \"string\")\r\n    return val1 === val2;\r\n  if (Array.isArray(val1) && Array.isArray(val2)) {\r\n    return JSON.stringify(val1) === JSON.stringify(val2);\r\n  }\r\n  if (typeof val1 === \"object\" && typeof val2 === \"object\") {\r\n    return (\r\n      JSON.stringify(sortObjectKeys(val1)) ===\r\n      JSON.stringify(sortObjectKeys(val2))\r\n    );\r\n  }\r\n  return false;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport nouislider from \"nouislider\";\r\n\r\nimport { isEqual } from \"./utils\";\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n  const { start, step, disabled, range } = prevProps;\r\n  return (\r\n    nextProps.step === step &&\r\n    isEqual(nextProps.start, start) &&\r\n    nextProps.disabled === disabled &&\r\n    isEqual(nextProps.range, range)\r\n  );\r\n};\r\n\r\nconst Nouislider = props => {\r\n  const sliderContainer = React.createRef();\r\n\r\n  const getSlider = () => (sliderContainer.current || {}).noUiSlider;\r\n\r\n  useEffect(() => {\r\n    const { instanceRef } = props;\r\n    const isCreatedRef =\r\n      instanceRef &&\r\n      Object.prototype.hasOwnProperty.call(instanceRef, \"current\");\r\n    if (instanceRef && instanceRef instanceof Function) {\r\n      instanceRef(sliderContainer.current);\r\n    }\r\n\r\n    if (isCreatedRef) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      instanceRef.current = sliderContainer.current;\r\n    }\r\n\r\n    return () => {\r\n      if (isCreatedRef) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        instanceRef.current = null;\r\n      }\r\n    };\r\n  }, [sliderContainer]);\r\n\r\n  const clickOnPip = pip => {\r\n    const value = Number(pip.target.getAttribute(\"data-value\"));\r\n    const slider = getSlider();\r\n    if (slider) {\r\n      slider.set(value);\r\n    }\r\n  };\r\n\r\n  const toggleDisable = disabled => {\r\n    const sliderHTML = sliderContainer.current;\r\n    if (sliderHTML) {\r\n      if (!disabled) {\r\n        sliderHTML.removeAttribute(\"disabled\");\r\n      } else {\r\n        sliderHTML.setAttribute(\"disabled\", true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { onUpdate, onChange, onSlide, onStart, onEnd, onSet } = props;\r\n\r\n  const updateEvents = (sliderComponent) => {\r\n    if (onStart) {\r\n      sliderComponent.off(\"start\");\r\n      sliderComponent.on(\"start\", onStart);\r\n    }\r\n\r\n    if (onSlide) {\r\n      sliderComponent.off(\"slide\");\r\n      sliderComponent.on(\"slide\", onSlide);\r\n    }\r\n\r\n    if (onUpdate) {\r\n      sliderComponent.off(\"update\");\r\n      sliderComponent.on(\"update\", onUpdate);\r\n    }\r\n\r\n    if (onChange) {\r\n      sliderComponent.off(\"change\");\r\n      sliderComponent.on(\"change\", onChange);\r\n    }\r\n\r\n    if (onSet) {\r\n      sliderComponent.off(\"set\");\r\n      sliderComponent.on(\"set\", onSet);\r\n    }\r\n\r\n    if (onEnd) {\r\n      sliderComponent.off(\"end\");\r\n      sliderComponent.on(\"end\", onEnd);\r\n    }\r\n  }\r\n\r\n  const updateOptions = options => {\r\n    const sliderHTML = sliderContainer.current;\r\n    sliderHTML.noUiSlider.updateOptions(options);\r\n  };\r\n\r\n  const setClickableListeners = () => {\r\n    if (props.clickablePips) {\r\n      const sliderHTML = sliderContainer.current;\r\n      [...sliderHTML.querySelectorAll(\".noUi-value\")].forEach(pip => {\r\n        pip.style.cursor = \"pointer\";\r\n        pip.addEventListener(\"click\", clickOnPip);\r\n      });\r\n    }\r\n  };\r\n\r\n  const createSlider = () => {\r\n    const sliderComponent = nouislider.create(sliderContainer.current, {\r\n      ...props\r\n    });\r\n\r\n    updateEvents(sliderComponent);\r\n\r\n    setClickableListeners();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { disabled } = props;\r\n    const sliderHTML = sliderContainer.current;\r\n    if (sliderHTML) {\r\n      toggleDisable(disabled);\r\n      createSlider();\r\n    }\r\n    return () => {\r\n      const slider = getSlider();\r\n      if (slider) slider.destroy();\r\n      if (sliderHTML) {\r\n        [...sliderHTML.querySelectorAll(\".noUi-value\")].forEach(pip => {\r\n          pip.removeEventListener(\"click\", clickOnPip);\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const { start, disabled, range, step, margin, padding, limit, pips, snap, animate } = props;\r\n\r\n  useEffect(() => {\r\n    const slider = getSlider();\r\n    if (slider) {\r\n      updateOptions({range, step, padding, margin, limit, pips, snap, animate});\r\n      slider.set(start);\r\n      setClickableListeners()\r\n    }\r\n    toggleDisable(disabled);\r\n  }, [start, disabled, range, step, margin, padding, limit, pips, snap, animate]);\r\n\r\n  useEffect(() => {\r\n    const slider = getSlider();\r\n    if (slider) {\r\n      updateEvents(slider)\r\n    }\r\n  }, [onUpdate, onChange, onSlide, onStart, onEnd, onSet])\r\n\r\n  const { id, className, style } = props;\r\n  const options = {};\r\n  if (id) {\r\n    options.id = id;\r\n  }\r\n  if (className) {\r\n    options.className = className;\r\n  }\r\n  return <div {...options} ref={sliderContainer} style={style} />;\r\n};\r\n\r\nNouislider.propTypes = {\r\n  // https://refreshless.com/nouislider/slider-options/#section-animate\r\n  animate: PropTypes.bool,\r\n  // https://refreshless.com/nouislider/behaviour-option/\r\n  behaviour: PropTypes.string,\r\n  className: PropTypes.string,\r\n  clickablePips: PropTypes.bool,\r\n  // https://refreshless.com/nouislider/slider-options/#section-connect\r\n  connect: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.bool),\r\n    PropTypes.bool\r\n  ]),\r\n  // http://refreshless.com/nouislider/slider-options/#section-orientation\r\n  direction: PropTypes.oneOf([\"ltr\", \"rtl\"]),\r\n  // https://refreshless.com/nouislider/more/#section-disable\r\n  disabled: PropTypes.bool,\r\n  format: PropTypes.object,\r\n  keyboardSupport: PropTypes.bool,\r\n  id: PropTypes.string,\r\n  instanceRef: PropTypes.oneOf([PropTypes.func, PropTypes.object]),\r\n  // https://refreshless.com/nouislider/slider-options/#section-limit\r\n  limit: PropTypes.number,\r\n  // https://refreshless.com/nouislider/slider-options/#section-margin\r\n  margin: PropTypes.number,\r\n  // https://refreshless.com/nouislider/events-callbacks/#section-change\r\n  onChange: PropTypes.func,\r\n  // https://refreshless.com/nouislider/events-callbacks/\r\n  onEnd: PropTypes.func,\r\n  // https://refreshless.com/nouislider/events-callbacks/#section-set\r\n  onSet: PropTypes.func,\r\n  // http://refreshless.com/nouislider/events-callbacks/#section-slide\r\n  onSlide: PropTypes.func,\r\n  // http://refreshless.com/nouislider/events-callbacks/\r\n  onStart: PropTypes.func,\r\n  // http://refreshless.com/nouislider/events-callbacks/#section-update\r\n  onUpdate: PropTypes.func,\r\n  // https://refreshless.com/nouislider/slider-options/#section-orientation\r\n  orientation: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\r\n  // https://refreshless.com/nouislider/slider-options/#section-padding\r\n  padding: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.arrayOf(PropTypes.number)\r\n  ]),\r\n  // https://refreshless.com/nouislider/pips/\r\n  pips: PropTypes.object,\r\n  // https://refreshless.com/nouislider/slider-values/#section-range\r\n  range: PropTypes.object.isRequired,\r\n  snap: PropTypes.bool,\r\n  // https://refreshless.com/nouislider/slider-options/#section-start\r\n  start: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\r\n  ]).isRequired,\r\n  // https://refreshless.com/nouislider/slider-options/#section-step\r\n  step: PropTypes.number,\r\n  style: PropTypes.objectOf(PropTypes.string),\r\n  // https://refreshless.com/nouislider/slider-options/#section-tooltips\r\n  tooltips: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.arrayOf(\r\n      PropTypes.bool,\r\n      PropTypes.shape({\r\n        from: PropTypes.func,\r\n        to: PropTypes.func\r\n      })\r\n    )\r\n  ])\r\n};\r\n\r\nNouislider.defaultProps = {\r\n  animate: true,\r\n  behaviour: \"tap\",\r\n  className: null,\r\n  clickablePips: false,\r\n  connect: false,\r\n  direction: \"ltr\",\r\n  disabled: false,\r\n  format: null,\r\n  margin: null,\r\n  limit: null,\r\n  keyboardSupport: true,\r\n  id: null,\r\n  instanceRef: null,\r\n  padding: 0,\r\n  pips: null,\r\n  snap: false,\r\n  step: null,\r\n  style: null,\r\n  orientation: \"horizontal\",\r\n  tooltips: false,\r\n  onChange: () => {},\r\n  onEnd: () => {},\r\n  onSet: () => {},\r\n  onSlide: () => {},\r\n  onStart: () => {},\r\n  onUpdate: () => {}\r\n};\r\n\r\nexport default React.memo(Nouislider, areEqual);\r\n"],"names":["sortObjectKeys","obj","Object","entries","sort","reduce","o","_ref","_ref2","_slicedToArray","k","v","isEqual","val1","val2","Array","isArray","JSON","stringify","_typeof","areEqual","prevProps","nextProps","start","step","disabled","range","Nouislider","props","sliderContainer","React","createRef","getSlider","current","noUiSlider","useEffect","instanceRef","isCreatedRef","prototype","hasOwnProperty","call","Function","clickOnPip","pip","value","Number","target","getAttribute","slider","set","toggleDisable","sliderHTML","setAttribute","removeAttribute","onUpdate","onChange","onSlide","onStart","onEnd","onSet","updateEvents","sliderComponent","off","on","setClickableListeners","clickablePips","_toConsumableArray","querySelectorAll","forEach","style","cursor","addEventListener","createSlider","nouislider","create","destroy","removeEventListener","margin","padding","limit","pips","snap","animate","options","updateOptions","id","className","ref","defaultProps","behaviour","connect","direction","format","keyboardSupport","orientation","tooltips","index","memo"],"mappings":"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"}