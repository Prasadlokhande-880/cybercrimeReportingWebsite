{"version":3,"file":"sweetalert2-react-content.cjs.min.js","sources":["../src/mounts.js","../src/index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: (swal) => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: (swal) => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: (swal) => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: (swal) => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: (swal) => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: (swal) => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: (swal) => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: (swal) => swal.getIconContent(),\n  },\n  {\n    key: 'loaderHtml',\n    getter: (swal) => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport default function withReactContent(ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams(params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map((mount) => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n\n  function render(swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find((mount) => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      const root = createRoot(domElement)\n      root.render(value)\n      swal.__roots.push(root)\n    })\n  }\n\n  function unrender(swal) {\n    swal.__roots.forEach((root) => {\n      root.unmount()\n    })\n    swal.__roots = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main(params, mixinParams) {\n      this.__roots = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superWillOpen = otherParams.willOpen || noop\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          willOpen: (popup) => {\n            render(this, reactParams)\n            superWillOpen(popup)\n          },\n          didOpen: (popup) => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup)\n            })\n          },\n          didDestroy: (popup) => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        })\n      )\n    }\n\n    update(params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"],"names":["key","mounts","swal","getter","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIconContent","getLoader","ParentSwal","reactParams","params","otherParams","mountKeys","entries","forEach","mount","Object","_ref","includes","React","isValidElement","value","_ref2","find","domElement","render","createRoot","__roots","push","root","unrender","unmount","argsToParams","args","static","name","index","_main","mixinParams","this","assign","extractReactParams","__params","willOpen","noop","didOpen","superDidDestroy","popup","superWillOpen","superDidOpen","update"],"mappings":";sVAEIA,MAAYC,EAAA,CAAA,KACHC,QAEXC,OAAAD,GAAAA,EAAAE,YACK,KACMF,OAEXC,OAAAD,GAAAA,EAAAG,oBACK,KACMH,oBAEXC,OAAAD,GAAAA,EAAAI,oBACK,KACMJ,iBAEXC,OAAAD,GAAAA,EAAAK,iBACK,KACML,mBAEXC,OAAAD,GAAAA,EAAAM,mBACK,KACMN,SAEXC,OAAAD,GAAAA,EAAAO,aACK,KACMP,kBAEXC,OAAAD,GAAAA,EAAAQ,kBACK,KACMR,WAEXC,OAAAD,GAAAA,EAAAS,kBACK,KACMT,aAEZC,OAAAD,GAAAA,EAAAU,8BC9BC,SAAAC,GAGE,SAAMC,EAAgBC,GAChBC,MAAAA,EAAgB,CAAA,EAChBC,EAAYhB,CAAAA,EACXiB,EAAQH,EAAQI,KAAQC,GAAkBA,EAAApB,MASnD,OATmDqB,OAAbH,QAAOH,GAACI,SAAAG,IACtCL,IAAAA,EAAAA,GAAUM,IACAvB,aAAYwB,EAAAC,eAAAC,MACZ1B,KACPgB,EAAAhB,GAAA,KAEPgB,EAAAhB,GAAA0B,CACA,IAEJ,CAAAZ,EAAAE,GAGEK,SAAOH,EAAQJ,EAAAA,GAAuCO,OAAbH,QAAOJ,GAACK,SAAAQ,IACzCP,IAAAA,EAAQnB,GAAO2B,EACrB,MACUC,EADM5B,EAAGmB,MAAYA,GAAWA,EAACpB,MAAAA,WACnB6B,GACnBC,EAAOJ,EAAMK,WAAAF,GAClB3B,EAAY4B,UACZ5B,EAAA8B,QAAAC,KAAAC,EAAA,GAGKC,CACPjC,SAAK8B,EAAe9B,GAClBgC,EAAKE,QAAOjB,SAAEe,IACdA,EAAAE,SAAA,IAEJlC,EAAA8B,QAAA,EAEA,CACE,OAAOK,cAAaC,EAClBC,uBACE,GAAiBf,EAAAC,eAAAa,EAAA,KAAAd,EAAAC,eAAAa,EAAA,IAAA,CACf,MAAOvB,GAAU,EAMd,MALH,gBAAe,iBAAgB,CAAAyB,EAAAC,UACTA,IAApB1B,EAAW0B,KACb1B,EAAAyB,GAAAF,EAAAG,GACA,IAEG1B,CACL,CACF,OAAAF,EAAAwB,aAAAC,EAGG,CACHI,MAAY3B,EAAA4B,GACRC,KAASZ,WACPY,KAAC9B,SAAWO,OAAawB,OAAC,CAAGC,EAAAA,EAAAA,GACnC,QAAsB9B,GAAoB8B,EAAQF,KAAAG,YAC7B/B,EAAmBgC,UAAQC,IACxBjC,EAAWkC,SAAWD,EACvCE,EACEN,EAAW7B,YAAaiC,EAC7BD,OAAAA,MAAWI,MAAU/B,OAAAwB,OAAA,CAAA,EAAA7B,EAAA,CACnBc,SAAOsB,IACMtB,EAAAc,KAAM9B,GACpBuC,EAAAD,EAAA,EAECF,QAAAE,IAGEE,YAAY,KACZA,EAAAF,EAAA,GACH,EAECD,WAAeC,IACPD,EAAMC,GAChBjB,EAAAS,KAAA,IAKNW,CACElC,OAAOwB,GACCxB,OAACwB,OAAKD,KAAAG,SAAAhC,GACRoB,EAAYS,YACZW,EAAOvC,GAAY8B,EAAAF,KAAAG,gBAClBQ,OAAMzC,GACfgB,EAAAc,KAAA9B,EACD"}